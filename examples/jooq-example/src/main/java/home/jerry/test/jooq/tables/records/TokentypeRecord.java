/*
 * This file is generated by jOOQ.
 */
package home.jerry.test.jooq.tables.records;


import home.jerry.test.jooq.tables.Tokentype;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TokentypeRecord extends UpdatableRecordImpl<TokentypeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>Token.TokenType.Id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>Token.TokenType.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>Token.TokenType.Type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>Token.TokenType.Type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>Token.TokenType.Description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>Token.TokenType.Description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>Token.TokenType.CreatedAtUtc</code>.
     */
    public void setCreatedatutc(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>Token.TokenType.CreatedAtUtc</code>.
     */
    public LocalDateTime getCreatedatutc() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>Token.TokenType.UpdatedAtUtc</code>.
     */
    public void setUpdatedatutc(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>Token.TokenType.UpdatedAtUtc</code>.
     */
    public LocalDateTime getUpdatedatutc() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>Token.TokenType.IsArchived</code>.
     */
    public void setIsarchived(Byte value) {
        set(5, value);
    }

    /**
     * Getter for <code>Token.TokenType.IsArchived</code>.
     */
    public Byte getIsarchived() {
        return (Byte) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokentypeRecord
     */
    public TokentypeRecord() {
        super(Tokentype.TOKENTYPE);
    }

    /**
     * Create a detached, initialised TokentypeRecord
     */
    public TokentypeRecord(Integer id, String type, String description, LocalDateTime createdatutc, LocalDateTime updatedatutc, Byte isarchived) {
        super(Tokentype.TOKENTYPE);

        setId(id);
        setType(type);
        setDescription(description);
        setCreatedatutc(createdatutc);
        setUpdatedatutc(updatedatutc);
        setIsarchived(isarchived);
        resetChangedOnNotNull();
    }
}
